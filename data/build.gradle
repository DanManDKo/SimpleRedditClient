apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdk
    buildToolsVersion rootProject.buildTools

    defaultConfig {
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        versionCode 1
        versionName "1.0"

        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true

            buildConfigField 'String', 'SCHEME', "\"https://\""
            buildConfigField 'String', 'HOST', "\"www.reddit.com\""

        }

        debug {
            minifyEnabled false

            buildConfigField 'String', 'SCHEME', "\"https://\""
            buildConfigField 'String', 'HOST', "\"www.reddit.com\""
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kapt {
        correctErrorTypes = true
        generateStubs = true
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 1000)
        }
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation project(":domain")

    /* Network */
    implementation "com.squareup.retrofit2:retrofit:2.5.0"
    implementation "com.squareup.retrofit2:adapter-rxjava:2.5.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.5.0"
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.13.1"
    implementation "com.squareup.okhttp3:okhttp:3.13.1"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "com.itkacher.okhttpprofiler:okhttpprofiler:1.0.5"

    /* Dagger */
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    /* Unit Test */
    testImplementation "junit:junit:$junitVirsion"
    // mockito
    testImplementation "org.mockito:mockito-inline:$mockitoVirsion"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVirsion"
}
